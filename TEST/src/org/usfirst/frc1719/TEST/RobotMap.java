// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1719.TEST;
    

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Gyro;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
//import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveLeftRear;
    public static SpeedController driveRightRear;
    public static SpeedController driveLeftFront;
    public static SpeedController driveRightFront;
    public static RobotDrive driveRobotDrive;
    public static Compressor pneumaticsCompressor;
    public static DigitalInput sensorsLimitSwitchSpringStringThingExtended;
    public static DigitalInput sensorsLimitSwitchSpringStringThingRetracted;
    public static Servo cameraMountYServo;
    public static Servo cameraMountXServo;
    public static Gyro sensorsGyro;
    
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    public static Solenoid springStringThingSolenoid;
    public static Relay springStringThingMotor;

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveLeftRear = new Talon(0);
        LiveWindow.addActuator("Drive", "Left Rear", (Talon) driveLeftRear);
        
        driveRightRear = new Talon(1);
        LiveWindow.addActuator("Drive", "Right Rear", (Talon) driveRightRear);
        
        driveLeftFront = new Talon(2);
        LiveWindow.addActuator("Drive", "Left Front", (Talon) driveLeftFront);
        
        driveRightFront = new Talon(3);
        LiveWindow.addActuator("Drive", "Right Front", (Talon) driveRightFront);
        
        driveRobotDrive = new RobotDrive(driveLeftFront, driveLeftRear, driveRightFront, driveRightRear);
        
        driveRobotDrive.setSafetyEnabled(true);
        driveRobotDrive.setExpiration(0.1);
        driveRobotDrive.setSensitivity(0.5);
        driveRobotDrive.setMaxOutput(1.0);
        driveRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        
        pneumaticsCompressor = new Compressor(0);
        
        springStringThingSolenoid = new Solenoid(0);
        LiveWindow.addActuator("Pneumatics", "SpringStringThingSolenoid", springStringThingSolenoid);
        
        springStringThingMotor = new Relay(0);
        LiveWindow.addActuator("Motor", "SpringStringThingMotor", springStringThingMotor);
        
        sensorsLimitSwitchSpringStringThingExtended = new DigitalInput(8);
        LiveWindow.addSensor("Sensors", "LimitSwitch SpringStringThing", sensorsLimitSwitchSpringStringThingExtended);
        
        sensorsLimitSwitchSpringStringThingRetracted = new DigitalInput(9);
        LiveWindow.addSensor("Sensors", "LimitSwitch SpringStringThing", sensorsLimitSwitchSpringStringThingRetracted);
        
        cameraMountYServo = new Servo(4);
        LiveWindow.addActuator("CameraMount", "YServo", cameraMountYServo);
        
        cameraMountXServo = new Servo(5);
        LiveWindow.addActuator("CameraMount", "XServo", cameraMountXServo);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        //Creates and resets a new gyro
        sensorsGyro = new Gyro(0);
        sensorsGyro.initGyro();
        sensorsGyro.reset();
    }
}
